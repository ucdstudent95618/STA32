---
title: "Homework3"
author: "Miguel Salazar"
date: "April 27, 2016"
output: html_document
---

###Problem I

```{r,echo=FALSE}

P = function(n)
{
  Human = sample(c("Male", "Female"),n,replace = TRUE, prob = c(0.55,0.45))
  choice = sapply(1:n, function(i){
    if(Human[i] == "Male"){
      return(sample(c("Z","T","P"),1,prob = c(0.35,0.35,0.30)))
    }
    if(Human[i] == "Female"){
      return(sample(c("P","T","Z"),1, prob = c(0.45,0.20,0.35)))
    }
  })
  #P(T)
  P.A = sum(choice == "T")/n
  #P(M or Z) ... P(M) + P(Z) - P (M and Z)
  P.B = sum(Human == "Male" | choice == "Z")/n
  #P(M'|P')
  P.C = sum(Human != "Male" & choice != "P")/sum(choice != "P")
  #P(Z'and M')
  P.D = sum(Human != "Male" & choice != "Z")/n
  #P(M|Z)
  P.E = sum(Human == "Male" & choice == "Z")/sum(choice == "Z")

  
  Results = matrix(c(P.A,P.B,P.C,P.D,P.E), nrow = 1)
  colnames(Results) = c("P(T)", "P(M or Z)", "P(M'|P')", "P(Z'and M')", "P(M | Z)")
  return(Results)
}

P(10000)
```

###Problem II
A) You Draw Two Threes
```{r,echo=FALSE}
P = function(n){
  suits = rep(c("H","D","S","C"),times = 13)
  values = rep(c("A",2:10,"J","Q","K"),times = 4)
  deck = rbind(suits,values)
  Results = sapply(1:n,function(i){
   Draw = sample(deck[2,],2,replace = FALSE)
   return(Draw)
  })

  P.A = sum(Results[1,] == "3" & Results[2,] == "3")/n
  return(P.A)
}
P(100000)
```

B) You draw one spade and one club, in that particular order
```{r,echo=FALSE}
P2 = function(n){
  suits = rep(c("H","D","S","C"),times = 13)
  values = rep(c("A",2:10,"J","Q","K"),times = 4)
  deck = rbind(suits,values)
  Results = sapply(1:n,function(i){
   Draw = sample(deck[1,],2,replace = FALSE)
   return(Draw)
  })

  P.B = sum(Results[1,] == "S" & Results[2,] == "C")/n
  return(P.B)
}
P2(100000)
```

C) You draw two of the same value (of any value).
```{r,echo=FALSE}
P3 = function(n){
  suits = rep(c("H","D","S","C"),times = 13)
  values = rep(c("A",2:10,"J","Q","K"),times = 4)
  deck = rbind(suits,values)
  Results = sapply(1:n,function(i){
   Draw = sample(deck[2,],2,replace = FALSE)
   return(Draw)
  })

  P.C = sum(Results[1,] == Results[2,])/n
  return(P.C)
}
P3(100000)
```

D) You draw a queen of spades and jack of diamonds (in no particular order).
```{r, echo=FALSE}
P4 = function(n){
  suits = rep(c("H","D","S","C"),times = 13)
  values = rep(c("A",2:10,"J","Q","K"),times = 4)
  deck = cbind(suits,values)
  Results = sapply(1:n,function(i){
   Draw = sample(1:52,2,replace = FALSE)
   return(deck[Draw,])
  })
  #Results = t(Results)
  P.D = sum(Results[1,] == "S" & Results[3,] == "Q" | Results[2,] == "S" & Results[4,] == "Q" | Results[1,] == "D" & Results[3,] == "J" | Results[2,] == "D" & Results[4,] == "J")/n
  return(P.D)
}
P4(100000)
```


###Problem III

A) You win nothing (a win/loss of 0).
```{r, echo=FALSE}
DieRollProb = function(n){
  Die = c(1:8) #1/8
  Results = sapply(1:n,function(i){
   Roll = sample(Die,2,replace = TRUE)
   return(Roll)
  })
  winnings = 2*(Results[1,]) - Results[2,]
 # return()
  P.A = sum(winnings == 0)/n
  return(P.A)
}

DieRollProb(100000)
```

B) You win at least 2 dollars P(X >= 2)
```{r, echo=FALSE}
DieRollProb = function(n){
  Die = c(1:8) #1/8
  Results = sapply(1:n,function(i){
   Roll = sample(Die,2,replace = TRUE)
   return(Roll)
  })
  winnings = 2*(Results[1,]) - Results[2,]
 # return()
  P.B = sum(winnings >= 2)/n
  return(P.B)
}

DieRollProb(100000)
```

C) The expected number of winnings
```{r, echo=FALSE}
DieRollProb = function(n){
  Die = c(1:8) #1/8
  Results = sapply(1:n,function(i){
   Roll = sample(Die,2,replace = TRUE)
   return(Roll)
  })
  winnings = 2*(Results[1,]) - Results[2,]
 # return()
  P.C = mean(winnings > 0)
  return(P.C)
}

DieRollProb(100000)

```

D) The standard deviation of winnings
```{r, echo=FALSE}
DieRollProb = function(n){
  Die = c(1:8) #1/8
  Results = sapply(1:n,function(i){
   Roll = sample(Die,2,replace = TRUE)
   return(Roll)
  })
  winnings = 2*(Results[1,]) - Results[2,]
 # return()
  P.D = sd(winnings > 0)
  return(P.D)
}

DieRollProb(100000)
```

###Problem IV

A)
```{r,echo=FALSE}
x = c(0,1,2,5,6,10)
p.x = c(0.50,0.05,0.10,0.05,0.05,0.15)
Prob4 = function(x,p.x){
  mean = 0
  for (i in 1:6)
    {
     mean = mean + sum(x[i]*p.x[i])
    }

  var = 0
  for (i in 1:6)
    {
     var = var + sum(x[i]*x[i]*p.x[i])
    }
  var_final = var - (mean*mean)
  ans = c(mean,var_final)
  names(ans) = c("Mean","Variance")
  return(ans)
}
Prob4(x,p.x)

```

B)
```{r, echo=FALSE}
x = seq(-20,0,2)
p.x = (1:11)/sum(1:11)

Prob4 = function(x,p.x){
  mean = 0
  for (i in 1:6)
    {
     mean = mean + sum(x[i]*p.x[i])
    }

  var = 0
  for (i in 1:6)
    {
     var = var + sum(x[i]*x[i]*p.x[i])
    }
  var_final = var - (mean*mean)
  ans = c(mean,var_final)
  names(ans) = c("Mean","Variance")
  return(ans)
}
Prob4(x,p.x)

```


C)
```{r, echo=FALSE}
x = 0:5
p.x = dbinom(0:5,5,0.50)
Prob4 = function(x,p.x){
  mean = 0
  for (i in 1:6)
    {
     mean = mean + sum(x[i]*p.x[i])
    }

  var = 0
  for (i in 1:6)
    {
     var = var + sum(x[i]*x[i]*p.x[i])
    }
  var_final = var - (mean*mean)
  ans = c(mean,var_final)
  names(ans) = c("Mean","Variance")
  return(ans)
}
Prob4(x,p.x)

```

